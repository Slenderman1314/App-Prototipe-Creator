import org.jetbrains.compose.desktop.application.dsl.TargetFormat
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    kotlin("multiplatform")
    id("com.android.application")
    id("org.jetbrains.compose")
    id("dev.icerock.mobile.multiplatform-resources")
}

kotlin {
    androidTarget {
        compilations.all {
            kotlinOptions {
                jvmTarget = "11"
            }
        }
    }
    
    jvm("desktop") {
        compilations.all {
            kotlinOptions.jvmTarget = "11"
        }
    }

    sourceSets {
        val commonMain by getting {
            dependencies {
                implementation(compose.runtime)
                implementation(compose.foundation)
                implementation(compose.material3)
                implementation(compose.ui)
                implementation(compose.components.resources)
                
                // Supabase
                implementation("io.github.jan-tennert.supabase:gotrue-kt:1.4.3")
                implementation("io.ktor:ktor-client-json:2.3.5")
                implementation("io.ktor:ktor-client-serialization:2.3.5")
                implementation("io.ktor:ktor-client-content-negotiation:2.3.5")
                
                // Ktor
                implementation("io.ktor:ktor-client-core:2.3.5")
                implementation("io.ktor:ktor-serialization-kotlinx-json:2.3.5")
                
                // Coroutines
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")
                
                // Koin
                implementation("io.insert-koin:koin-core:3.5.0")
                implementation("io.insert-koin:koin-compose:1.1.0")
                
                // Moko Resources
                implementation("dev.icerock.moko:resources:0.24.0")
                implementation("dev.icerock.moko:resources-compose:0.24.0")
            }
        }

        val desktopMain by getting {
            dependencies {
                implementation(compose.desktop.currentOs)
                implementation("io.ktor:ktor-client-cio:2.3.5")
            }
        }

        val androidMain by getting {
            dependencies {
                implementation("androidx.core:core-ktx:1.12.0")
                implementation("androidx.activity:activity-compose:1.8.1")
                implementation("androidx.compose.ui:ui-tooling-preview:1.6.0")
                implementation("androidx.compose.material3:material3:1.2.0")
            }
        }
    }
}

android {
    namespace = "app.prototype.creator"
    compileSdk = 34

    defaultConfig {
        applicationId = "app.prototype.creator"
        minSdk = 24
        targetSdk = 34
        versionCode = 1
        versionName = "1.0"
    }

    buildTypes {
        getByName("release") {
            isMinifyEnabled = false
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    buildFeatures {
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.4"
    }
}

compose.desktop {
    application {
        mainClass = "app.prototype.creator.MainKt"

        nativeDistributions {
            targetFormats(TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb)
            packageName = "app-prototype-creator"
            packageVersion = "1.0.0"
        }
    }
}

tasks.withType<KotlinCompile> {
    kotlinOptions.jvmTarget = "11"
}
            
            // Ktor for HTTP requests (for AI API)
            implementation("io.ktor:ktor-client-core:2.3.5")
            implementation("io.ktor:ktor-client-json:2.3.5")
            implementation("io.ktor:ktor-client-content-negotiation:2.3.5")
            implementation("io.ktor:ktor-serialization-kotlinx-json:2.3.5")
            
            // Serialization
            implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0")
            
            // Koin Core (shared)
            implementation("io.insert-koin:koin-core:3.5.0")
            implementation("io.insert-koin:koin-compose:1.1.0")
            
            // Moko Resources
            implementation("dev.icerock.moko:resources:0.24.0")
            implementation("dev.icerock.moko:resources-compose:0.24.0")
            
            // Supabase
            implementation("io.github.jan-tennert.supabase:postgrest-kt:1.4.3")
            implementation("io.github.jan-tennert.supabase:realtime-kt:1.4.3")
            implementation("io.github.jan-tennert.supabase:storage-kt:1.4.3")
            implementation("io.github.jan-tennert.supabase:functions-kt:1.4.3")
            implementation("io.ktor:ktor-client-cio:2.3.5")
            
            // Serialization
            implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0")
            
            // Settings (para guardar preferencias)
            implementation("com.russhwolf:multiplatform-settings:1.1.1")
            implementation("com.russhwolf:multiplatform-settings-no-arg:1.1.1")
        }
        
        androidMain.dependencies {
            implementation(compose.preview)
            implementation("androidx.webkit:webkit:1.8.0")
            implementation("com.google.accompanist:accompanist-webview:0.32.0")
        }
        
        commonTest.dependencies {
            implementation(libs.kotlin.test)
        }
        
        jvmMain.dependencies {
            implementation(compose.desktop.currentOs)
            implementation(libs.kotlinx.coroutinesSwing)
            
            // Ktor JVM engine
            implementation("io.ktor:ktor-client-cio:2.3.5")
        }
    }
}

android {
    namespace = "app.prototype.creator"
    compileSdk = libs.versions.android.compileSdk.get().toInt()

    defaultConfig {
        applicationId = "app.prototype.creator"
        minSdk = libs.versions.android.minSdk.get().toInt()
        targetSdk = libs.versions.android.targetSdk.get().toInt()
        versionCode = 1
        versionName = "1.0"
    }
    packaging {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
    buildTypes {
        getByName("release") {
            isMinifyEnabled = false
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
}

dependencies {
    debugImplementation(compose.uiTooling)
}

compose.desktop {
    application {
        mainClass = "app.prototype.creator.MainKt"

        nativeDistributions {
            targetFormats(TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb)
            packageName = "app.prototype.creator"
            packageVersion = "1.0.0"
        }
    }
}
